const time = 10; 
const el = document.getElementById('cd');

function update() {
  const endTime = localStorage.getItem('endTime');
  if (endTime === null) {
    const newEndTime = Date.now() + time * 60 * 1000;
    localStorage.setItem('endTime', newEndTime);
  }

  const currentTime = Date.now();
  const remainingTime = localStorage.getItem('endTime') - currentTime;

  if (remainingTime >= 0) {
    const minutes = Math.floor((remainingTime / 1000) / 60);
    let seconds = Math.floor((remainingTime / 1000) % 60);
    seconds = seconds < 10 ? '0' + seconds : seconds;
    el.innerHTML = `${minutes}:${seconds}`;
  } else {
    alert('Time up!');
    submitQuiz();
    localStorage.removeItem('endTime');
    clearInterval(intervalId);
  }
}

const intervalId = setInterval(update, 1000);
window.addEventListener('beforeunload', () => {
  clearInterval(intervalId);
});

const quizData = [
  { question: "What is the name of algorithm which used by GPT-4?", options: ["Generative Adversarial Network","Artificial Neural Network","Transformer Architecture","Q-learning" ], correct: 2 },
  { question: "What common issue in AI-generated images involves incorrect positioning of body parts, especially noted with fingers?", options: ["Mode collapse","Artifact","Overfit","Latent space"], correct: 1 },
  { question: "What is the name of company that aims  to enhance tunneling speed enough such that establishing a tunnel network is financially feasible ,which is owned by Elon Musk?", options: ["Neuralink","SpaceX","Boring Company","OpenAI"], correct: 2 },
  { question: "What is the implantable, brain computer capable of translating thoughts into actions?", options: ["Synchron","Emotiv","BrainCo","Neuralink"], correct: 3 },
  { question: "What is the term for the technique used to improving images generated by upscaling in NVIDIA's DLSS technology?", options: ["Raytracing","FSR","sharpening","FPS Boost"], correct: 0 },
  { question: "Name a common test used to determine if a machine can exhibit human-like intelligence.", options: ["AI benchmarking","Turing test","Adversarial test","CAPTCHA"], correct: 1 },
  { question: "Name the thing which revolutionized the ability of computers by enhancing their capabilities and become popular due to rise of AI, what is that?", options: ["RAM","GPU","TPU","CPU"], correct: 1 },
  { question: "The latest tech innovation that speed up development by using AI which developed by company called Cognition?", options: ["Gemini-AI","Copilot","GPT-4","Devin-AI"], correct: 1 },
  { question: "What is name of first “computer virus” which targeted APARNET, the precursor to internet?", options: ["Creeper","Lovebug","Stuxnet","Saaser"], correct: 0 },
  { question: "Until Alan Emtage, a native of Barbados, created the world's first search engine, What is name of the world’s first search engiene?", options: ["Google","Archie","Bing","Yahoo"], correct: 1 },
  { question: "What is technology used behind a creation of Satoshi Nakamoto?", options: ["Deep learning", "IOT", "Block chain", "Virtual reality"], correct: 2 },
  { question: "This device, introduced by a Cupertino-based tech giant, marks their entry into a new product category that blends realities. What is the name of this product?", options: ["Meta quest", "Vision pro", "Holo lens", "Playstation VR"], correct: 1 },
  { question: "Python ,known for its multi purpose and dead slow execution , but this parallel computing model enhanced its speed , what is it?", options: ["CUDA", "Tensor", "Registers", "Threads"], correct: 0 },
  { question: "What is the name of the standard communication protocol that is crucial for enabling low-power IoT devices to connect to the internet directly via widely used mobile networks?", options: ["MQTT", "SMTP", "POP3", "API"], correct: 0 },
  { question: "Nokia 6131 first used this technology which enables two devices, such as smartphones and payment terminals, to communicate when they are brought within a few centimeters of each other, name that technology ", options: ["Wifi", "Zigbee", "UPI", "NFC"], correct: 3 },
  { question: "Emoji widely used in text based conversation to reflect one’s reaction, name the person who designed to concept of emoji", options: ["Charles Babbage", "Shigeta Kurita", "John Macarthy", "Fu Jeing"], correct: 2 },
  { question: "What North Carolina-based game company created the 2018 game “Fortnite?”", options: ["Activision", "Unity", "Epic", "Sony"], correct: 2 },
  { question: "What is the official name for the “prove you’re not a robot” tests that websites sometimes require?", options: ["CAPTCHA", "ReCAPTCHA", "Authentication Test", "Verify-Pass"], correct: 0 },
  { question: "Which University offered the first-ever academic programme in Computer Science? Which University offered the first-ever academic programme in Computer Science?", options: ["MIT", "Prude university", "Harvard", "Stanford"], correct: 0 },
  { question: "Sonos .Inc , an American based company , what is it famous for?", options: ["Speakers", "Camera", "Keyboard", "Display"], correct: 0 },
];

const questionsPerPage = 5;
let currentPage = 0;
let selectedAnswers = Array(quizData.length).fill(null);

function renderPage(page) {
  const container = document.getElementById('quiz-container');
  const submitBtnContainer = document.getElementById('submitbtn');
  container.innerHTML = '';
  submitBtnContainer.innerHTML = '';

  const startIndex = page * questionsPerPage;
  const endIndex = Math.min(startIndex + questionsPerPage, quizData.length);

  for (let i = startIndex; i < endIndex; i++) {
    const question = quizData[i].question;
    const options = quizData[i].options;
    container.innerHTML += `<h2>${question}</h2>`;

    if (i < 15) {
      options.forEach((option, index) => {
        container.innerHTML += `
          <div>
            <input type="radio" name="option${i}" id="option${i}-${index}" value="${index}" ${selectedAnswers[i] === index ? 'checked' : ''}>
            <label for="option${i}-${index}">${option}</label>
          </div>`;
      });
    } else {
      options.forEach((option, index) => {
        container.innerHTML += `
          <div>
            <input type="checkbox" name="option${i}" id="option${i}-${index}" value="${index}" ${selectedAnswers[i] && selectedAnswers[i].includes(index) ? 'checked' : ''}>
            <label for="option${i}-${index}">${option}</label>
          </div>`;
      });
    }
  }

  if (page === Math.ceil(quizData.length / questionsPerPage) - 1) {
    submitBtnContainer.innerHTML += `<button id="submit" onclick="submitQuiz()">Submit</button>`;
  }
}

function collectAnswers() {
  for (let i = 0; i < quizData.length; i++) {
    if (i < 15) {
      const selectedOption = document.querySelector(`input[name="option${i}"]:checked`);
      if (selectedOption) {
        selectedAnswers[i] = parseInt(selectedOption.value);
      }
    } else {
      const checkboxes = document.querySelectorAll(`input[name="option${i}"]:checked`);
      selectedAnswers[i] = Array.from(checkboxes).map(checkbox => parseInt(checkbox.value));
    }
  }
}

function validateAllAnswers() {
  const resultContainer = document.getElementById('result');
  resultContainer.innerHTML = '';
  resultContainer.innerHTML += `<p>YOUR QUIZ RESULTS</p>`;
  
  let score = 0;
  
  for (let i = 0; i < quizData.length; i++) {
    if (selectedAnswers[i] !== null) {
      if (i < 15) {
        if (selectedAnswers[i] === quizData[i].correct) {
          resultContainer.innerHTML += `<p class="correct">Question ${i + 1}: Correct!</p>`;
          score++;
        } else {
          resultContainer.innerHTML += `<p class="incorrect">Question ${i + 1}: Incorrect. Correct answer is ${quizData[i].options[quizData[i].correct]}.</p>`;
        }
      } else {
        const correctAnswers = Array.isArray(quizData[i].correct) ? quizData[i].correct : [quizData[i].correct];
        const selectedCorrectAnswers = selectedAnswers[i].filter(answer => correctAnswers.includes(answer));
        
        if (selectedCorrectAnswers.length === correctAnswers.length && selectedCorrectAnswers.every((val, index) => val === correctAnswers[index])) {
          resultContainer.innerHTML += `<p class="correct">Question ${i + 1}: Correct!</p>`;
          score++;
        } else {
          const correctOptions = correctAnswers.map(index => quizData[i].options[index]).join(', ');
          resultContainer.innerHTML += `<p class="incorrect">Question ${i + 1}: Incorrect. Correct answer(s) are ${correctOptions}.</p>`;
        }
      }
    } else {
      resultContainer.innerHTML += `<p class="not-selected">Question ${i + 1}: No answer selected.</p>`;
    }
  }

  alert(`Quiz submitted! Your score is ${score} out of ${quizData.length}`);
}


function submitQuiz() {
  collectAnswers();
  validateAllAnswers();
}

function prevPage() {
  if (currentPage > 0) {
    collectAnswers();
    currentPage--;
    renderPage(currentPage);
  }
}

function nextPage() {
  if (currentPage < Math.ceil(quizData.length / questionsPerPage) - 1) {
    collectAnswers();
    currentPage++;
    renderPage(currentPage);
  }
}

document.addEventListener('DOMContentLoaded', () => {
  renderPage(currentPage);
});
