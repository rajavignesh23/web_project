const time = 10; // Quiz time in minutes
const quizData = [
  { question: "What is the name of the algorithm used by GPT-4?", options: ["Generative Adversarial Network","Artificial Neural Network","Transformer Architecture","Q-learning"], correct: 2 },
  { question: "What common issue in AI-generated images involves incorrect positioning of body parts, especially noted with fingers?", options: ["Mode collapse","Artifact","Overfit","Latent space"], correct: 1 },
  { question: "What is the name of the company that aims to enhance tunneling speed enough such that establishing a tunnel network is financially feasible, which is owned by Elon Musk?", options: ["Neuralink","SpaceX","Boring Company","OpenAI"], correct: 2 },
  { question: "What is the implantable brain computer capable of translating thoughts into actions?", options: ["Synchron","Emotiv","BrainCo","Neuralink"], correct: 3 },
  { question: "What is the term for the technique used to improve images generated by upscaling in NVIDIA's DLSS technology?", options: ["Raytracing","FSR","sharpening","FPS Boost"], correct: 0 },
  { question: "Name a common test used to determine if a machine can exhibit human-like intelligence.", options: ["AI benchmarking","Turing test","Adversarial test","CAPTCHA"], correct: 1 },
  { question: "Name the thing which revolutionized the ability of computers by enhancing their capabilities and become popular due to the rise of AI, what is that?", options: ["RAM","GPU","TPU","CPU"], correct: 1 },
  { question: "The latest tech innovation that speeds up development by using AI which developed by a company called Cognition?", options: ["Gemini-AI","Copilot","GPT-4","Devin-AI"], correct: 1 },
  { question: "What is the name of the first “computer virus” which targeted APARNET, the precursor to the internet?", options: ["Creeper","Lovebug","Stuxnet","Saaser"], correct: 0 },
  { question: "Until Alan Emtage, a native of Barbados, created the world's first search engine, What is the name of the world’s first search engine?", options: ["Google","Archie","Bing","Yahoo"], correct: 1 },
  { question: "What technology used behind the creation of Satoshi Nakamoto?", options: ["Deep learning","IOT","Block chain","Virtual reality"], correct: 2 },
  { question: "This device, introduced by a Cupertino-based tech giant, marks their entry into a new product category that blends realities. What is the name of this product?", options: ["Meta quest","Vision pro","Holo lens","Playstation VR"], correct: 1 },
  { question: "Python, known for its multi-purpose and dead slow execution, but this parallel computing model enhanced its speed, what is it?", options: ["CUDA","Tensor","Registers","Threads"], correct: 0 },
  { question: "What is the name of the standard communication protocol that is crucial for enabling low-power IoT devices to connect to the internet directly via widely used mobile networks?", options: ["MQTT","SMTP","POP3","API"], correct: 0 },
  { question: "Nokia 6131 first used this technology which enables two devices, such as smartphones and payment terminals, to communicate when they are brought within a few centimeters of each other, name that technology", options: ["Wifi","Zigbee","UPI","NFC"], correct: 3 },
  { question: "Emoji widely used in text-based conversation to reflect one’s reaction, name the person who designed the concept of emoji", options: ["Charles Babbage","Shigeta Kurita","John Macarthy","Fu Jeing"], correct: 2 },
  { question: "What North Carolina-based game company created the 2018 game “Fortnite?”", options: ["Activision","Unity","Epic","Sony"], correct: 2 },
  { question: "What is the official name for the “prove you’re not a robot” tests that websites sometimes require?", options: ["CAPTCHA","ReCAPTCHA","Authentication Test","Verify-Pass"], correct: 0 },
  { question: "Which University offered the first-ever academic program in Computer Science?", options: ["MIT","Prude university","Harvard","Stanford"], correct: 0 },
  { question: "Sonos .Inc, an American-based company, what is it famous for?", options: ["Speakers","Camera","Keyboard","Display"], correct: 0 },
];

const questionsPerPage = 5;
let currentPage = 0;
let selectedAnswers = Array(quizData.length).fill(null);
let intervalId;

function initializeTimer() {
  const endTime = localStorage.getItem('endTime');
  if (!endTime) {
    const newEndTime = Date.now() + time * 60 * 1000;
    localStorage.setItem('endTime', newEndTime);
  }
}

function updateTimer() {
  const endTime = localStorage.getItem('endTime');
  if (endTime) {
    const currentTime = Date.now();
    const remainingTime = endTime - currentTime;
    
    if (remainingTime >= 0) {
      const minutes = Math.floor((remainingTime / 1000) / 60);
      let seconds = Math.floor((remainingTime / 1000) % 60);
      seconds = seconds < 10 ? '0' + seconds : seconds;
      document.getElementById('cd').innerHTML = `${minutes}:${seconds}`;
    } else {
      clearInterval(intervalId);
      document.getElementById('cd').innerHTML = '0:00'; 
    }
  }
}

function renderPage(page) {
  const container = document.getElementById('quiz-container');
  const submitBtnContainer = document.getElementById('submitbtn');
  const prevBtn = document.getElementById('prev');
  const nextBtn = document.getElementById('next');

  container.innerHTML = '';
  submitBtnContainer.innerHTML = '';

  const startIndex = page * questionsPerPage;
  const endIndex = Math.min(startIndex + questionsPerPage, quizData.length);

  for (let i = startIndex; i < endIndex; i++) {
    const question = quizData[i].question;
    const options = quizData[i].options;

    container.innerHTML += `<h2 class="question">${question}</h2>`;
    container.innerHTML += `<div class="options">`;

    if (i < 15) {
      options.forEach((option, index) => {
        container.innerHTML += `
          <div>
            <input type="radio" name="option${i}" id="option${i}-${index}" value="${index}" ${selectedAnswers[i] === index ? 'checked' : ''}>
            <label for="option${i}-${index}">${option}</label>
          </div>`;
      });
    } else {
      options.forEach((option, index) => {
        container.innerHTML += `
          <div>
            <input type="checkbox" name="option${i}" id="option${i}-${index}" value="${index}" ${selectedAnswers[i] && selectedAnswers[i].includes(index) ? 'checked' : ''}>
            <label for="option${i}-${index}">${option}</label>
          </div>`;
      });
    }

    container.innerHTML += `</div>`;
  }

  prevBtn.style.display = (page === 0) ? 'none' : 'inline-block';

  if (page === Math.ceil(quizData.length / questionsPerPage) - 1 || submitBtnContainer.querySelector('#submit')) {
    nextBtn.style.display = 'none';
  } else {
    nextBtn.style.display = 'inline-block';
  }

  if (page === Math.ceil(quizData.length / questionsPerPage) - 1) {
    submitBtnContainer.innerHTML = `<button id="submit" onclick="submitQuiz()">Submit</button>`;
  }
}

function collectAnswers() {
  const inputs = document.querySelectorAll('input[type="radio"]:checked, input[type="checkbox"]:checked');
  inputs.forEach(input => {
    const questionIndex = parseInt(input.name.replace('option', ''));
    const optionIndex = parseInt(input.value);
    if (input.type === 'checkbox') {
      if (!selectedAnswers[questionIndex]) {
        selectedAnswers[questionIndex] = [];
      }
      selectedAnswers[questionIndex].push(optionIndex);
    } else {
      selectedAnswers[questionIndex] = optionIndex;
    }
  });
}

function validateAllAnswers() {
  const resultContainer = document.getElementById('result');
  resultContainer.innerHTML = '<p>YOUR QUIZ RESULTS</p>';
  let score = 0;

  quizData.forEach((question, index) => {
    const selectedAnswer = selectedAnswers[index];
    if (selectedAnswer !== null && selectedAnswer !== undefined) {
      if (Array.isArray(question.correct)) {
        const isCorrect = question.correct.every(correctIndex => selectedAnswer.includes(correctIndex));
        if (isCorrect) {
          resultContainer.innerHTML += `<p class="correct">Question ${index + 1}: Correct!</p>`;
          score++;
        } else {
          const correctOptions = question.correct.map(correctIndex => question.options[correctIndex]).join(', ');
          resultContainer.innerHTML += `<p class="incorrect">Question ${index + 1}: Incorrect. Correct answer(s): ${correctOptions}</p>`;
        }
      } else {
        if (selectedAnswer === question.correct) {
          resultContainer.innerHTML += `<p class="correct">Question ${index + 1}: Correct!</p>`;
          score++;
        } else {
          resultContainer.innerHTML += `<p class="incorrect">Question ${index + 1}: Incorrect. Correct answer: ${question.options[question.correct]}</p>`;
        }
      }
    } else {
      resultContainer.innerHTML += `<p class="not-selected">Question ${index + 1}: No answer selected.</p>`;
    }
  });

  const endTime = localStorage.getItem('endTime');
  if (endTime) {
    const currentTime = Date.now();
    const remainingTime = endTime - currentTime;
    
    if (remainingTime >= 0) {
      const minutes = Math.floor((remainingTime / 1000) / 60);
      let seconds = Math.floor((remainingTime / 1000) % 60);
      seconds = seconds < 10 ? '0' + seconds : seconds;
      document.getElementById('cd').innerHTML = `${minutes}:${seconds}`;
    }
  }

  alert(`Quiz submitted! Your score is ${score} out of ${quizData.length}`);
  clearInterval(intervalId);
  localStorage.removeItem('endTime');
}

function submitQuiz() {
  collectAnswers();
  validateAllAnswers();
}

function prevPage() {
  if (currentPage > 0) {
    collectAnswers();
    currentPage--;
    renderPage(currentPage);
  }
}

function nextPage() {
  if (currentPage < Math.ceil(quizData.length / questionsPerPage) - 1) {
    collectAnswers();
    currentPage++;
    renderPage(currentPage);
  }
}

document.addEventListener('DOMContentLoaded', () => {
  initializeTimer();
  intervalId = setInterval(updateTimer, 1000);
  renderPage(currentPage);
});

window.addEventListener('beforeunload', () => {
  collectAnswers();
  clearInterval(intervalId);
});
